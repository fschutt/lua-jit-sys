[package]
name = "lua-jit-sys"
version = "2.0.50"
authors = ["Felix Sch√ºtt <felix.schuett@maps4print.com>"]
build = "build.rs"
repository = "https://github.com/fschutt/lua-jit-sys"
homepage = "https://github.com/fschutt/lua-jit-sys"
license = "MIT"
readme = "README.md"
description = "System bindings for LuaJIT 2.0.5"

[dependencies]

[build-dependencies]
bindgen = "0.46.0"
gcc = "0.3"

[features]
default = ["arch_x64","sse", "sse2"]

# PLEASE CHOOSE ONLY ONE OF THE ARCHITECTURES, WILL NOT COMPILE OTHERWISE!
arch_arm = []
arch_mips = []
arch_mipsel = []
arch_powerpc = []
arch_powerpc_spe = []
arch_x64 = []
arch_x86 = []

# Use this if you want to force a 32 bit build on a 64 bit multilib OS.
force_32_bit = []

# Enable or disable SSE (for GCC)
sse = []

# Enable or disable SSE2 (for GCC), overrides SSE
sse2 = []

# Extra warnings (from GCC)
extra_warnings = []

# Features from Lua 5.2 that are unlikely to break existing code are
# enabled by default. Some other features that *might* break some existing
# code (e.g. __pairs or os.execute() return values) can be enabled here.
# Note: this does not provide full compatibility with Lua 5.2 at this time.
enable_lua52_compat = []

# Disable the JIT compiler, i.e. turn LuaJIT into a pure interpreter.
disable_jit = []

# Some architectures (e.g. PPC) can use either single-number (1) or
# dual-number (2) mode. Uncomment one of these lines to override the
# default mode. Please see LJ_ARCH_NUMMODE in lj_arch.h for details.
# XCFLAGS+= -DLUAJIT_NUMMODE=1
# XCFLAGS+= -DLUAJIT_NUMMODE=2
#
# Note: nummode_2 overrides nummode_1
nummode_1 = []
nummode_2 = []

# Use the system provided memory allocator (realloc) instead of the
# bundled memory allocator. This is slower, but sometimes helpful for
# debugging. This option cannot be enabled on x64, since realloc usually
# doesn't return addresses in the right address range.
# OTOH this option is mandatory for Valgrind's memcheck tool on x64 and
# the only way to get useful results from it for all other architectures.
use_sysmalloc = []

# This define is required to run LuaJIT under Valgrind. The Valgrind
# header files must be installed. You should enable debug information, too.
# Use --suppressions=lj.supp to avoid some false positives.
use_valgrind = []

# This is the client for the GDB JIT API. GDB 7.0 or higher is required
# to make use of it. See lj_gdbjit.c for details. Enabling this causes
# a non-negligible overhead, even when not running under GDB.
use_gdb_jit = []

# Turn on assertions for the Lua/C API to debug problems with lua_* calls.
# This is rather slow -- use only while developing C libraries/embeddings.
use_apicheck = []

# Turn on assertions for the whole LuaJIT VM. This significantly slows down
# everything. Use only if you suspect a problem with LuaJIT itself.
use_assert = []

# Optimize for size (-Os) in GCC
optimize_size = []

# Strip the final static library from symbols
strip = []

# PlayStation 3 config
ps3 = ["use_sysmalloc", "cellos_lv2"]

# Misc, only for PS3
cellos_lv2 = []
